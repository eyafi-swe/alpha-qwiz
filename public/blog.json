[
    {
        "id":1,
        "title":"What is the purpose of react router?",
        "image": "https://i.ibb.co/7nd0H8g/0-ngq-SFJg-Q1fkp-W-1-Y.png",
        "date":"2 January, 2022",
        "author":"Eyafi Neo",
        "description":"React Router is a standard library for routing in React. It enables the navigation among views of various components in a React Application, allows changing the browser URL, and keeps the UI in sync with the URL.React Router, and dynamic, client-side routing, allows us to build a single-page web application with navigation without the page refreshing as the user navigates. React Router uses component structure to call components, which display the appropriate information. By preventing a page refresh, and using Router or Link, the flash of a white screen or blank page is prevented. This is one increasingly common way of having a more seamless user experience. React router also allows the user to utilize browser functionality like the back button and the refresh page while maintaining the correct view of the application."
    },
    {
        "id":2,
        "title":"How does context api work?",
        "image": "https://i.ibb.co/vs6wn3F/react-context-api.jpg",
        "date":"5 January, 2022",
        "author":"Eyafi Neo",
        "description":"Context is a built-in API introduced in React 16.3. The React Context API is a way for a React app to effectively produce global variables that can be passed around. This is the alternative to prop drilling or moving props from grandparent to child to parent, and so on. It makes it possible to pass data from parent to children nested deep down the component tree directly, instead of passing it down through a chain of props.As we mentioned earlier, the Context API is useful for sharing data that can be considered global, such as the currently authenticated user, the theme settings for the application, and more. In situations where we have these types of data, we can use the Context API and we don't necessarily have to use extra modules. In fact, any situation where you have to pass a prop through a component so it reaches another component somewhere down the tree is where you can use the Context API"
    },
    {
        "id":3,
        "title":"What is useRef hook?",
        "image": "https://i.ibb.co/JxgSmLh/use-Ref-react-hook.jpg",
        "date":"7 January, 2022",
        "author":"Eyafi Neo",
        "description":"The useRef Hook allows you to persist values between renders. It can be used to store a mutable value that does not cause a re-render when updated. It can be used to access a DOM element directly. The useRef is used when you need to manage focus, text selection, trigger imperative animations or integrating third-party libraries. useRef returns a mutable ref object whose .current property is initialized to the passed argument ( initialValue ). The returned object will persist for the full lifetime of the component. Essentially, useRef is like a “box” that can hold a mutable value in its .current property. Syntax: const refContainer = useRef(initialValue); The useRef returns a mutable ref object."
    }
]